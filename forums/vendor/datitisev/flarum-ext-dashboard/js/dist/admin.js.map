{"version":3,"sources":["webpack://@datitisev/dashboard/webpack/bootstrap","webpack://@datitisev/dashboard/external \"flarum.core.compat['app']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['helpers/icon']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/Button']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/DashboardWidget']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/Modal']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['extend']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/AdminNav']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/DashboardPage']\"","webpack://@datitisev/dashboard/./node_modules/p-queue/index.js","webpack://@datitisev/dashboard/./node_modules/compare-versions/index.js","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/Switch']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@datitisev/dashboard/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@datitisev/dashboard/./src/components/DashboardWidgetGraph.js","webpack://@datitisev/dashboard/./src/components/ExtensionUpdatesModal.js","webpack://@datitisev/dashboard/./src/components/DashboardExtensionInfoModal.js","webpack://@datitisev/dashboard/./src/components/DashboardWidgetExtensions.js","webpack://@datitisev/dashboard/./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","PriorityQueue","[object Object]","this","_queue","run","options","element","priority","assign","size","push","index","array","comp","first","count","length","step","it","lowerBound","a","b","splice","shift","carryoverConcurrencyCount","intervalCap","Infinity","interval","concurrency","autoStart","queueClass","TypeError","Number","isFinite","_carryoverConcurrencyCount","_isIntervalIgnored","_intervalCount","_intervalCap","_interval","_intervalId","_intervalEnd","_timeoutId","queue","_queueClass","_pendingCount","_concurrency","_isPaused","_resolveEmpty","_resolveIdle","_doesIntervalAllowAnother","_doesConcurrentAllowAnother","_tryToStartAnother","_onInterval","_initializeIntervalIfNeeded","now","Date","delay","setTimeout","_onResumeInterval","clearInterval","_resolvePromises","canInitializeInterval","_intervalPaused","dequeue","setInterval","fn","Promise","resolve","reject","enqueue","then","val","_next","err","fns","all","map","add","existingResolve","pending","isPaused","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","semver","split","v","replace","patchIndex","str","q","indexOf","indexOrEnd","arr","substring","tryParse","isNaN","validate","version","test","Error","v1","v2","forEach","s1","s2","Math","max","n1","parseInt","n2","sp1","sp2","p1","p2","apply","_inheritsLoose","subClass","superClass","constructor","__proto__","DashboardWidgetGraph_DashboardWidgetGraph","init","_DashboardWidget","months","external_flarum_core_compat_app_default","translator","trans","content","_app$forum$attribute","forum","attribute","userCount","discussionCount","postCount","className","graphView","keys","id","month","DashboardWidget_default","ExtensionUpdatesModal_ExtensionUpdatesModal","loading","needsUpdate","errors","getPackagesAndVersions","title","updates","transChoice","_this","style","extension","oldVersion","newVersion","ext","error","_this2","p_queue_default","promises","values","data","extensions","filter","startsWith","request","url","package","versions","sort","compare_versions","latestVersion","extensionUpdates","redraw","catch","message","status","addAll","Modal_default","DashboardExtensionInfoModal_DashboardExtensionInfoModal","_Modal","props","isEnabled","LoadingIndicator_default","app","extensionSettings","Button_default","component","icon","onclick","uninstall","hide","icon_default","extra","description","authors","e","join","source","href","target","Switch_default","state","children","onchange","toggle","isDismissible","JSON","parse","settings","extensions_enabled","includes","enabled","method","enabledArr","stringify","DashboardWidgetExtensions_DashboardWidgetExtensions","modal","show","initializers","external_flarum_core_compat_extend_","AdminNav_default","items","remove","DashboardPage_default"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/DashboardWidget'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/DashboardPage'];","'use strict';\n\n// Port of lower_bound from http://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nfunction lowerBound(array, value, comp) {\n\tlet first = 0;\n\tlet count = array.length;\n\n\twhile (count > 0) {\n\t\tconst step = (count / 2) | 0;\n\t\tlet it = first + step;\n\n\t\tif (comp(array[it], value) <= 0) {\n\t\t\tfirst = ++it;\n\t\t\tcount -= step + 1;\n\t\t} else {\n\t\t\tcount = step;\n\t\t}\n\t}\n\n\treturn first;\n}\n\nclass PriorityQueue {\n\tconstructor() {\n\t\tthis._queue = [];\n\t}\n\n\tenqueue(run, options) {\n\t\toptions = Object.assign({\n\t\t\tpriority: 0\n\t\t}, options);\n\n\t\tconst element = {priority: options.priority, run};\n\n\t\tif (this.size && this._queue[this.size - 1].priority >= options.priority) {\n\t\t\tthis._queue.push(element);\n\t\t\treturn;\n\t\t}\n\n\t\tconst index = lowerBound(this._queue, element, (a, b) => b.priority - a.priority);\n\t\tthis._queue.splice(index, 0, element);\n\t}\n\n\tdequeue() {\n\t\treturn this._queue.shift().run;\n\t}\n\n\tget size() {\n\t\treturn this._queue.length;\n\t}\n}\n\nclass PQueue {\n\tconstructor(options) {\n\t\toptions = Object.assign({\n\t\t\tcarryoverConcurrencyCount: false,\n\t\t\tintervalCap: Infinity,\n\t\t\tinterval: 0,\n\t\t\tconcurrency: Infinity,\n\t\t\tautoStart: true,\n\t\t\tqueueClass: PriorityQueue\n\t\t}, options);\n\n\t\tif (!(typeof options.concurrency === 'number' && options.concurrency >= 1)) {\n\t\t\tthrow new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${options.concurrency}\\` (${typeof options.concurrency})`);\n\t\t}\n\n\t\tif (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n\t\t\tthrow new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${options.intervalCap}\\` (${typeof options.intervalCap})`);\n\t\t}\n\n\t\tif (!(typeof options.interval === 'number' && Number.isFinite(options.interval) && options.interval >= 0)) {\n\t\t\tthrow new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${options.interval}\\` (${typeof options.interval})`);\n\t\t}\n\n\t\tthis._carryoverConcurrencyCount = options.carryoverConcurrencyCount;\n\t\tthis._isIntervalIgnored = options.intervalCap === Infinity || options.interval === 0;\n\t\tthis._intervalCount = 0;\n\t\tthis._intervalCap = options.intervalCap;\n\t\tthis._interval = options.interval;\n\t\tthis._intervalId = null;\n\t\tthis._intervalEnd = 0;\n\t\tthis._timeoutId = null;\n\n\t\tthis.queue = new options.queueClass(); // eslint-disable-line new-cap\n\t\tthis._queueClass = options.queueClass;\n\t\tthis._pendingCount = 0;\n\t\tthis._concurrency = options.concurrency;\n\t\tthis._isPaused = options.autoStart === false;\n\t\tthis._resolveEmpty = () => {};\n\t\tthis._resolveIdle = () => {};\n\t}\n\n\tget _doesIntervalAllowAnother() {\n\t\treturn this._isIntervalIgnored || this._intervalCount < this._intervalCap;\n\t}\n\n\tget _doesConcurrentAllowAnother() {\n\t\treturn this._pendingCount < this._concurrency;\n\t}\n\n\t_next() {\n\t\tthis._pendingCount--;\n\t\tthis._tryToStartAnother();\n\t}\n\n\t_resolvePromises() {\n\t\tthis._resolveEmpty();\n\t\tthis._resolveEmpty = () => {};\n\n\t\tif (this._pendingCount === 0) {\n\t\t\tthis._resolveIdle();\n\t\t\tthis._resolveIdle = () => {};\n\t\t}\n\t}\n\n\t_onResumeInterval() {\n\t\tthis._onInterval();\n\t\tthis._initializeIntervalIfNeeded();\n\t\tthis._timeoutId = null;\n\t}\n\n\t_intervalPaused() {\n\t\tconst now = Date.now();\n\n\t\tif (this._intervalId === null) {\n\t\t\tconst delay = this._intervalEnd - now;\n\t\t\tif (delay < 0) {\n\t\t\t\t// Act as the interval was done\n\t\t\t\t// We don't need to resume it here,\n\t\t\t\t// because it'll be resumed on line 160\n\t\t\t\tthis._intervalCount = (this._carryoverConcurrencyCount) ? this._pendingCount : 0;\n\t\t\t} else {\n\t\t\t\t// Act as the interval is pending\n\t\t\t\tif (this._timeoutId === null) {\n\t\t\t\t\tthis._timeoutId = setTimeout(() => this._onResumeInterval(), delay);\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t_tryToStartAnother() {\n\t\tif (this.queue.size === 0) {\n\t\t\t// We can clear the interval (\"pause\")\n\t\t\t// because we can redo it later (\"resume\")\n\t\t\tclearInterval(this._intervalId);\n\t\t\tthis._intervalId = null;\n\n\t\t\tthis._resolvePromises();\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this._isPaused) {\n\t\t\tconst canInitializeInterval = !this._intervalPaused();\n\t\t\tif (this._doesIntervalAllowAnother && this._doesConcurrentAllowAnother) {\n\t\t\t\tthis.queue.dequeue()();\n\t\t\t\tif (canInitializeInterval) {\n\t\t\t\t\tthis._initializeIntervalIfNeeded();\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t_initializeIntervalIfNeeded() {\n\t\tif (this._isIntervalIgnored || this._intervalId !== null) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._intervalId = setInterval(() => this._onInterval(), this._interval);\n\t\tthis._intervalEnd = Date.now() + this._interval;\n\t}\n\n\t_onInterval() {\n\t\tif (this._intervalCount === 0 && this._pendingCount === 0) {\n\t\t\tclearInterval(this._intervalId);\n\t\t\tthis._intervalId = null;\n\t\t}\n\n\t\tthis._intervalCount = (this._carryoverConcurrencyCount) ? this._pendingCount : 0;\n\t\twhile (this._tryToStartAnother()) {} // eslint-disable-line no-empty\n\t}\n\n\tadd(fn, options) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst run = () => {\n\t\t\t\tthis._pendingCount++;\n\t\t\t\tthis._intervalCount++;\n\n\t\t\t\ttry {\n\t\t\t\t\tPromise.resolve(fn()).then(\n\t\t\t\t\t\tval => {\n\t\t\t\t\t\t\tresolve(val);\n\t\t\t\t\t\t\tthis._next();\n\t\t\t\t\t\t},\n\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\tthis._next();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\tthis._next();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.queue.enqueue(run, options);\n\t\t\tthis._tryToStartAnother();\n\t\t});\n\t}\n\n\taddAll(fns, options) {\n\t\treturn Promise.all(fns.map(fn => this.add(fn, options)));\n\t}\n\n\tstart() {\n\t\tif (!this._isPaused) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isPaused = false;\n\t\twhile (this._tryToStartAnother()) {} // eslint-disable-line no-empty\n\t}\n\n\tpause() {\n\t\tthis._isPaused = true;\n\t}\n\n\tclear() {\n\t\tthis.queue = new this._queueClass(); // eslint-disable-line new-cap\n\t}\n\n\tonEmpty() {\n\t\t// Instantly resolve if the queue is empty\n\t\tif (this.queue.size === 0) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tconst existingResolve = this._resolveEmpty;\n\t\t\tthis._resolveEmpty = () => {\n\t\t\t\texistingResolve();\n\t\t\t\tresolve();\n\t\t\t};\n\t\t});\n\t}\n\n\tonIdle() {\n\t\t// Instantly resolve if none pending and if nothing else is queued\n\t\tif (this._pendingCount === 0 && this.queue.size === 0) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tconst existingResolve = this._resolveIdle;\n\t\t\tthis._resolveIdle = () => {\n\t\t\t\texistingResolve();\n\t\t\t\tresolve();\n\t\t\t};\n\t\t});\n\t}\n\n\tget size() {\n\t\treturn this.queue.size;\n\t}\n\n\tget pending() {\n\t\treturn this._pendingCount;\n\t}\n\n\tget isPaused() {\n\t\treturn this._isPaused;\n\t}\n}\n\nmodule.exports = PQueue;\n","/* global define */\n(function (root, factory) {\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.compareVersions = factory();\n  }\n}(this, function () {\n\n  var semver = /^v?(?:\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+))?(?:-[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\n\n  function indexOrEnd(str, q) {\n    return str.indexOf(q) === -1 ? str.length : str.indexOf(q);\n  }\n\n  function split(v) {\n    var c = v.replace(/^v/, '').replace(/\\+.*$/, '');\n    var patchIndex = indexOrEnd(c, '-');\n    var arr = c.substring(0, patchIndex).split('.');\n    arr.push(c.substring(patchIndex + 1));\n    return arr;\n  }\n\n  function tryParse(v) {\n    return isNaN(Number(v)) ? v : Number(v);\n  }\n\n  function validate(version) {\n    if (typeof version !== 'string') {\n      throw new TypeError('Invalid argument expected string');\n    }\n    if (!semver.test(version)) {\n      throw new Error('Invalid argument not valid semver (\\''+version+'\\' received)');\n    }\n  }\n\n  return function compareVersions(v1, v2) {\n    [v1, v2].forEach(validate);\n\n    var s1 = split(v1);\n    var s2 = split(v2);\n\n    for (var i = 0; i < Math.max(s1.length - 1, s2.length - 1); i++) {\n      var n1 = parseInt(s1[i] || 0, 10);\n      var n2 = parseInt(s2[i] || 0, 10);\n\n      if (n1 > n2) return 1;\n      if (n2 > n1) return -1;\n    }\n\n    var sp1 = s1[s1.length - 1];\n    var sp2 = s2[s2.length - 1];\n\n    if (sp1 && sp2) {\n      var p1 = sp1.split('.').map(tryParse);\n      var p2 = sp2.split('.').map(tryParse);\n\n      for (i = 0; i < Math.max(p1.length, p2.length); i++) {\n        if (p1[i] === undefined || typeof p2[i] === 'string' && typeof p1[i] === 'number') return -1;\n        if (p2[i] === undefined || typeof p1[i] === 'string' && typeof p2[i] === 'number') return 1;\n\n        if (p1[i] > p2[i]) return 1;\n        if (p2[i] > p1[i]) return -1;\n      }\n    } else if (sp1 || sp2) {\n      return sp1 ? -1 : 1;\n    }\n\n    return 0;\n  };\n\n}));\n","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import app from 'flarum/app';\nimport DashboardWidget from 'flarum/components/DashboardWidget';\n\nexport default class DashboardWidgetGraph extends DashboardWidget {\n    init() {\n        super.init();\n\n        this.months = [\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.january'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.february'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.march'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.april'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.may'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.june'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.july'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.august'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.september'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.october'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.november'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.december'),\n        ];\n    }\n\n    content() {\n        const { userCount, discussionCount, postCount } = app.forum.attribute('datitisev-dashboard.data');\n\n        return (\n            <div className=\"DashboardGraph--Categories\">\n                <div className=\"DashboardGraph--Category Category--Users\">\n                    <span className=\"color\" />\n                    {app.translator.trans('datitisev-dashboard.admin.dashboard.graph.users')}\n                    <br />\n                    <span className=\"number\">{userCount}</span>\n                </div>\n                <div className=\"DashboardGraph--Category Category--Discussions\">\n                    <span className=\"color\" />\n                    {app.translator.trans('datitisev-dashboard.admin.dashboard.graph.discussions')}\n                    <br />\n                    <span className=\"number\">{discussionCount}</span>\n                </div>\n                <div className=\"DashboardGraph--Category Category--Posts\">\n                    <span className=\"color\" />\n                    {app.translator.trans('datitisev-dashboard.admin.dashboard.graph.posts')}\n                    <br />\n                    <span className=\"number\">{postCount}</span>\n                </div>\n            </div>\n        );\n    }\n\n    className() {\n        return 'DashboardGraph';\n    }\n\n    graphView() {\n        return (\n            <div className=\"DashboardGraph--Graph\">\n                {Object.keys(this.months).map(id => {\n                    const month = months[id];\n                    return (\n                        <div className=\"DashboardGraph--Month\">\n                            <div className=\"bars\">BAR</div>\n                            <div className=\"name\">{month}</div>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n","import Modal from 'flarum/components/Modal';\nimport app from 'flarum/app';\nimport PQueue from 'p-queue';\nimport * as compareVersions from 'compare-versions';\n\nexport default class ExtensionUpdatesModal extends Modal {\n    init() {\n        this.loading = true;\n        this.needsUpdate = [];\n\n        this.errors = [];\n\n        this.getPackagesAndVersions();\n    }\n\n    className() {\n        return 'DashboardSettingsModal ExtensionUpdatesModal Modal--large';\n    }\n\n    title() {\n        const updates = this.needsUpdate.length;\n\n        if (updates > 0) {\n            return app.translator.transChoice('datitisev-dashboard.admin.dashboard.updates.available', updates, { count: updates });\n        }\n\n        if (this.loading) {\n            return app.translator.trans('datitisev-dashboard.admin.dashboard.updates.checking');\n        } else if (updates === 0) {\n            return app.translator.trans('datitisev-dashboard.admin.dashboard.updates.none');\n        }\n    }\n\n    content() {\n        return (\n            <div className=\"PermissionGrid container\">\n                <table className=\"PermissionGrid\" style={!this.errors && this.needsUpdate.length === 0 ? 'display: none' : ''}>\n                    <thead>\n                        <tr>\n                            <th>\n                                Extension\n                                {this.loading && (\n                                    <span>\n                                        &nbsp;&nbsp;\n                                        <i className=\"fas fa-circle-notch fa-spin\" />\n                                    </span>\n                                )}\n                            </th>\n                            <th>Version Installed</th>\n                            <th>New Version</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Object.keys(this.needsUpdate).map(id => {\n                            const extension = this.needsUpdate[id];\n                            return (\n                                <tr className=\"PermissionGrid-child\">\n                                    <td>{extension.name}</td>\n                                    <td>{extension.oldVersion}</td>\n                                    <td>{extension.newVersion}</td>\n                                </tr>\n                            );\n                        })}\n\n                        {this.errors &&\n                            this.errors.map(ext => (\n                                <tr className=\"ExtensionUpdatesModal--Error PermissionGrid-child\">\n                                    <td>{ext.name}</td>\n                                    <td>{ext.version}</td>\n                                    <td>{ext.error}</td>\n                                </tr>\n                            ))}\n                    </tbody>\n                </table>\n                <div style={this.needsUpdate.length === 0 && !this.errors && !this.loading ? '' : 'display: none'}>\n                    <h3>{app.translator.trans('datitisev-dashboard.admin.dashboard.updates.none')}</h3>\n                </div>\n            </div>\n        );\n    }\n\n    getPackagesAndVersions() {\n        const queue = new PQueue({\n            intervalCap: 2,\n            interval: 500,\n        });\n        const extensions = Object.values(app.data.extensions).filter(v => !v.version.startsWith('dev'));\n\n        const promises = extensions.map(extension => () =>\n            m\n                .request({\n                    url: `https://packagist.org/packages/${extension.name}.json`,\n                })\n                .then(data => {\n                    data = data.package;\n\n                    const versions = Object.keys(data.versions)\n                        .filter(v => !v.startsWith('dev'))\n                        .sort(compareVersions);\n                    const latestVersion = versions[versions.length - 1];\n                    const version = extension.version;\n\n                    if (latestVersion && version !== latestVersion) {\n                        this.extensionUpdates = this.needsUpdate.length + 1;\n\n                        return this.needsUpdate.push({\n                            name: extension.name,\n                            oldVersion: version,\n                            newVersion: latestVersion,\n                        });\n                    }\n\n                    m.redraw();\n                })\n                .catch(err => {\n                    if (!err || typeof err !== 'object' || !err.message) return false;\n\n                    this.errors.push({\n                        name: extension.name,\n                        version: extension.version,\n                        error: err.status ? `${err.status}: ${err.message}` : err.message,\n                    });\n                })\n        );\n\n        queue.addAll(promises).then(() => (this.loading = false));\n    }\n}\n","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport icon from 'flarum/helpers/icon';\nimport Switch from 'flarum/components/Switch';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\n\nexport default class DashboardExtensionInfoModal extends Modal {\n    init() {\n        super.init();\n\n        this.extension = this.props.extension;\n    }\n\n    className() {\n        return 'DashboardExtensionInfoModal Modal--large';\n    }\n\n    content() {\n        const extension = this.extension;\n        const isEnabled = this.isEnabled(extension.id);\n\n        return (\n            <div className=\"DashboardExtensionInfo\">\n                <div className=\"Modal-close App-backControl\">\n                    {this.loading && <LoadingIndicator className=\"LoadingIndicator--inline\"/>}\n                    {isEnabled && app.extensionSettings[extension.id] &&\n                        Button.component({\n                            icon: 'fas fa-cog',\n                            onclick: () => app.extensionSettings[extension.id](),\n                            className: 'Button Button--icon Button--link',\n                        })}\n                    {!isEnabled && Button.component({\n                        icon: 'fas fa-unlink',\n                        onclick: this.uninstall.bind(this),\n                        className: 'Button Button--icon Button--link',\n                    })}\n                    {Button.component({\n                        icon: 'fas fa-times',\n                        onclick: this.hide.bind(this),\n                        className: 'Button Button--icon Button--link',\n                    })}\n                </div>\n\n                <div className=\"DashboardExtensionInfo-Main\">\n                    <spam className=\"DashboardExtensionInfoMain-icon\" style={extension.icon}>\n                        {extension.icon ? icon(extension.icon.name) : ''}\n                    </spam>\n                    <h3 className=\"DashboardExtensionInfoMain-title\">{extension.extra['flarum-extension'].title}</h3>\n                    <span className=\"DashboardExtensionInfoMain-name\">{extension.name}</span>\n                    <span className=\"DashboardExtensionInfoMain-version\">{extension.version}</span>\n                    <p className=\"DashboardExtensionInfoMain-description\">\n                        {extension.description || ''}\n                    </p>\n                    <p className=\"DashboardExtensionInfoMain-useful\">\n                        <p className=\"DashboardExtensionInfoMainUseful-author\">\n                            {extension.authors && extension.authors.length === 1 ? icon('fas fa-user') : icon('fas fa-users')}\n                            &nbsp;\n                            {extension.authors ? extension.authors.map(e => e.name).join(', ') : 'Unknown'}\n                        </p>\n                        <p className=\"DashboardExtensionInfoMainUseful-source\">\n                            {icon('fas fa-code')}\n                            &nbsp;\n                            {extension.source ? (\n                                <a href={extension.source.url} target=\"_blank\">\n                                    Source\n                                </a>\n                            ) : (\n                                'Unknown'\n                            )}\n                        </p>\n                    </p>\n                    <div className=\"DashboardExtensionInfoMain-enabled\">\n                        {Switch.component({\n                            state: isEnabled,\n                            children: isEnabled ? 'Enabled' : 'Disabled',\n                            onchange: this.toggle.bind(this, extension.id),\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    isDismissible() {\n        return true;\n    }\n\n    isEnabled(name) {\n        const enabled = JSON.parse(app.data.settings.extensions_enabled);\n\n        return enabled.includes(name);\n    }\n\n    toggle(id) {\n        const enabled = this.isEnabled(id);\n\n        app.request({\n            url: `${app.forum.attribute('apiUrl')}/extensions/${id}`,\n            method: 'PATCH',\n            data: { enabled: !enabled },\n        }).then(() => {\n            const enabledArr = JSON.parse(app.data.settings.extensions_enabled);\n            if (!enabled) enabledArr.push(id);\n            else enabledArr.splice(enabledArr.indexOf(id), 1);\n\n            app.data.settings.extensions_enabled = JSON.stringify(enabledArr);\n\n            m.redraw();\n        });\n    }\n\n    uninstall() {\n        this.loading = true;\n\n        return app.request({\n            url: `${app.forum.attribute('apiUrl')}/extensions/${this.extension.id}`,\n            method: 'DELETE'\n        }).then(() => {\n            this.loading = false;\n            m.redraw();\n        });\n    }\n}\n","import Button from 'flarum/components/Button';\nimport DashboardWidget from 'flarum/components/DashboardWidget';\nimport icon from 'flarum/helpers/icon';\n\nimport ExtensionUpdatesModal from './ExtensionUpdatesModal';\nimport DashboardExtensionInfoModal from './DashboardExtensionInfoModal';\n\nexport default class DashboardWidgetExtensions extends DashboardWidget {\n    content() {\n        const extensions = app.data.extensions;\n\n        return (\n            <div>\n                <div className=\"DashboardExtensions--Title\">\n                    <span>{app.translator.trans('core.admin.nav.extensions_button')}</span>\n\n                    {Button.component({\n                        children: icon('fas fa-upload'),\n                        className: 'Button',\n                        onclick: () => app.modal.show(new ExtensionUpdatesModal()),\n                    })}\n                </div>\n\n                <div className=\"DashboardExtensions--List\">\n                    {Object.values(extensions).map(extension => (\n                        <li\n                            className={'DashboardExtensions--Item ' + (this.isEnabled(extension.id) ? 'enabled' : 'disabled')}\n                            onclick={() =>\n                                app.modal.show(\n                                    new DashboardExtensionInfoModal({\n                                        extension,\n                                    })\n                                )\n                            }\n                        >\n                            <div className=\"DashboardExtensionsItem-content\">\n                                <spam className=\"DashboardExtensionsItem-icon\" style={extension.icon}>\n                                    {extension.icon ? icon(extension.icon.name) : ''}\n                                </spam>\n                                <label className=\"DashboardExtensionsItem-title\">{extension.extra['flarum-extension'].title}</label>\n                            </div>\n                        </li>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n\n    isEnabled(name) {\n        const enabled = JSON.parse(app.data.settings.extensions_enabled);\n\n        return enabled.includes(name);\n    }\n\n    className() {\n        return 'DashboardExtensions';\n    }\n}\n","import { extend } from 'flarum/extend';\nimport AdminNav from 'flarum/components/AdminNav';\nimport DashboardPage from 'flarum/components/DashboardPage';\n\nimport WidgetGraph from \"./components/DashboardWidgetGraph\";\nimport WidgetExtensions from \"./components/DashboardWidgetExtensions\";\n\napp.initializers.add('datitisev/dashboard', () => {\n\n    extend(AdminNav.prototype, 'items', items => {\n        items.remove('extensions');\n    });\n\n    extend(DashboardPage.prototype, 'availableWidgets', items => {\n        items.push(<WidgetGraph />);\n        items.push(<WidgetExtensions />);\n    })\n});\n"],"sourceRoot":""}